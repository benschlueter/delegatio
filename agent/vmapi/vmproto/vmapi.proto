syntax = "proto3";

package vmapi;

option go_package = "github.com/benschlueter/delegatio/core/vmapi/vmproto";


service API {
  rpc ExecCommandStream(stream ExecCommandStreamRequest) returns (stream ExecCommandStreamResponse);
  rpc ExecCommandReturnStream(ExecCommandRequest) returns (stream ExecCommandReturnStreamResponse);
  rpc ExecCommand(ExecCommandRequest) returns (ExecCommandResponse);
  rpc WriteFile(WriteFileRequest) returns (WriteFileResponse);
  rpc ReadFile(ReadFileRequest) returns (ReadFileResponse);
  rpc getJoinDataKube(GetJoinDataKubeRequest) returns (GetJoinDataKubeResponse);
}

message ExecCommandStreamRequest {
  oneof content {
    ExecCommandRequest command = 1;
    bytes stdin = 2;
    TerminalSizeRequest termsize = 3;
  }
}

message ExecCommandStreamResponse {
  oneof content {
    bytes stdout = 1;
    bytes stderr = 2;
    string err = 3;
  }
}

message ExecCommandReturnStreamResponse {
  oneof content {
    bytes output = 1;
    Log log = 2;
  }
}

message TerminalSizeRequest {
	int32 width = 1;  
	int32 height = 2;
}

message ExecCommandRequest {
  string command = 1;
  repeated string args = 2;
  bool tty = 3;
}

message ExecCommandResponse {
  bytes output = 1;
}

message WriteFileRequest {
  string filepath = 1;
  string filename = 2;
  bytes content = 3;
}

message WriteFileResponse {
}

message ReadFileRequest {
  string filepath = 1;
  string filename = 2;

}

message ReadFileResponse {
  bytes content = 3;
}

message Log {
  string message = 1;
}

message GetJoinDataKubeRequest {
}

message GetJoinDataKubeResponse {
  string joinconfig = 1;
  string certs = 2;
}
